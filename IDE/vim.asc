= VIM 参考手册

== 多文件编辑
=== 编辑另一个文件
当编辑完一个文件后，可以不用退出vim，使用下面的命令编辑另一个文件

*:edit foo.txt*

如果当前的文件没有保存，会弹出错误信息。可以使用``:edit! foo.txt``
放弃当前修改。或者使用``:hide edit foo.txt``隐含foo.txt到缓冲区，
参见<<buffer,缓冲区>>。

----
E37: No write since last change (use ! to override)
----
NOTE: 每条错误信息前面都会显示错误编号，可以使用``help``命令查看该错误
编号的详细信息。对于本例，``help E37``

=== 查看与切换

有如下涉及到多个文件编辑的命令

.多文件查看与切换命令
[cols="1m,2a"]
|====
| 格式 | 含义

| `vim` one.txt  two.txt  three.txt
| 同时编辑三个文件

| `:args` one.txt  two.txt  three.txt +
  `:args` \**/*.txt + 
  `:args` *.txt
| 在vim环境下，编辑三个文件 one.txt, tow.txt and three.txt,
  列出所有正在编辑的文件，用[]标注的是当前正在编辑的命令。
  args支持shell通配符。

| `:next` `:next!` +
  `:2next`  `:wnext` +
  `:previous` `:previous!` +
  `:wprevious`
| 切换到下一个或者上一个文件。如果当前文件没有保存会报错。如果有后缀!，
  放弃当前的修改。前面有字符w，表示先保存，在切换。如果前面有数字，
  相当于连续切换n次。

| CTRL-^
| 当编辑多个文件时，使用CTRL-^快捷键可以快速在最浏览的两个文件间切换。

| `"
| vim会记录每个文件编辑时所在的位置。当切换到某个文件时，使用该快捷键使光标
  跳转到你最后编辑这个文件时光标所在的位置。

| `.
| vim会记录每个文件最后修改的位置。当切换到某个文件时，使用该快捷键使光标切
  换到该文件最后修改的位置。

| 基于记号（mark）的切换
| 可以使用记号记录一个文件的某个位置，如果记号使用大写字母，这个记号将是全局
  的。可以在编辑一个文件时使用记号直接切换到另一个定义该记号的文件。例如，
  使用``mV``记录该文件的某个位置，然后切换到其它文件。然后使用```V``可以直接
  切换到该文件的那个位置。
|====

=== 备份
在默认情况下，vim不产生备份文件。如果希望产生备份文件，执行下面命令

  :set backup

备份文件的名称是在原文件名的后面加上一个波浪线符号（~）。如果想使用其它的扩展
名，使用如下的命令。 这样，文件data.txt的备份文件将是data.txt.bak，而不是
data.txt~。

  :set backupext=.bak


如果希望在编辑一个文件时保留一份修改前的备份，可以使用如下的命令。这样在一个
文件修改保存后，将会存在另一个扩展名为.orig的文件，这个文件是修改前的一个备份。

  :set patchmode=.orig


另外，不要忘记可以使用如下的命令设置自动保存或者关闭自动保存。

 :set [no]autowrite

=== 批量修改

. 进入vim
. :args \**/*
. :argdo %s/oldStr/newStr/egc \| update

[buffer]
== 缓冲区


[mark]
== 记号（mark）
记号是对文件中的一个位置的标识。通常由a-z小写字母对当前文件的位置做记号，
这类记号只在一个文件中有效，而用A-Z对某个文件的位置做全局的记号，这种记号也
称做文件记号，在不同文件间有效。

有如下关于记号的命令：

.主要记号命令
[cols="1m,3"]
|====
| 命令格式 | 说明

| m{a-zA-Z}
| 使用 `m` 快捷键为当前位置设置记号。记号使用小写或者大写字母进行标识

| m` or m'
| 使用符号`或者'设置当前位置，可以使用''或者``进行跳转

| m[ or m]
| 使用符号[或者]标识当前位置，可以使用'[或者']进行跳转

| '{a-z} `{a-z}
| 跳转到当前缓冲区文件的记号{a-z}

| '{A-Z0-9} `{A-Z0-9}
| 跳转到定义记号{A-Z}文件，并且跳转到记号{A-Z}

| g'{mark} g`{mark}
| 跳转到记号{mark}，但是不改变跳转列表（justlist），关于跳转列表参见<<jump,
  跳转列表>>

| :marks
| 列出所有记号，不包括记号 `(`, `)`, `{`, `}`

| :marks {arg}
| 列出指定的记号，如 `marks aB` 列出记号a和B

| :delm[arks] {marks}
| 删除指定的记号。不能删除记号'。记号可以使用枚举，用-分隔的区间，如果存在
  空格，空格将被忽略。如 +
  `:delmarks a` +
  `:delmarks a b 1` +
  `:delmarks ab1` +
  `:delmarks p-z` +
  `:delmarks ^.[]` +
  `:delmarks \"`  +

| :delm[arks]!
| 删除当前缓冲区中除了A-Z或者0-9以外的所有记号
|====

- a - z 小写字母记号只在定义它们的那个文件中有效，只要这个文件在缓冲区列表中
  存在，这些记号就会存在。如果这个文件从缓冲区列表中删除，那么这个文件定义的
  所有记号都会消失。如果删除了包含一个记号的行，那么这个记号也会被删除。

- 小写字母记号能够与操作符进行组合。比如 `d't` 将会删除当前光标所在行与记号 
  `t` 所标记的行之间的所有行。

- 大写字母记号记录了文件名，所以能够使用它们进行文件之间的跳转。当前正在显示
  的文件定义了某个大写字母记号，也可以在当前文件中进行记号与操作符组合。

- 记号标记的位置会根据插入或者删除行自动进行调整，从而保持是原来所标记的位置。

- 数字标记 `0-9` 是比较特殊的，它记录了退出文件时光标所在的位置。每次退出，
  新的光标位置使用0进行标记，上一次退出位置使用1进行标记，以此类推。

.其它记号命令
[cols="1m,3"]
|====
| 命令 | 说明

| '[  `[
|

| ']  `]
|

| '<  `<
|

| '>  `>
|

| ''  ``
|

| '"  `"
|

| '^  `^
|

| '.  `.
|

| '(  `(
|

| ')  `)
|

| '{  `{
|

| '}  `}
|

| ]'
|

| ]`
|

| ['
|

| [`
|

| :loc[kmarks] {command}
|

| :kee[pmarks] {command}
|

| :keepj[umps] {command}
|
|====

[jump]
== 跳转列表 
