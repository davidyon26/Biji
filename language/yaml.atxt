YAML 简介
=======
David Yon <davidyon@hotmail.com>
v1.0, 2017-06-15
:toc:
:numbered:
:icons: font

本文只是简单介绍什么是YAML语言，不致力于详细这个语言的语法和语义。
YAML的详细信息请参考<<YAML_ORG,YAML官方文献>>

== 简介

YAML是“YAML Ain't Markup Language”的缩写。当前版本是1.2，前面两个版本是1.1
和 1.0。YAML是数据序列化语言，主要是用于以人可读的方式描述数据。
这些数据可以应用于软件的配置文件，日志文件或者程序间的数据交换。

对于这类语言，最直观的是CVS，其使用逗号分隔的方式描述表数据。
与YAML最类似的语言是JSON，实际上，1.2版本的YAML是JSON的超级，
已经兼容了JSON。另外使用更广的XML语言也可以看作这类语言，但应用面更广。

YAML是<<WIKI_OFFSIDE,越位规则（off-side rule）>>语言，程序块的范围是由缩进
决定的。

== 语法
本节列出了主要语言结构，详细请参考<<YAML_REF,1.1参考条例>>以及
<<YAML_SPE_1_2,YAM 1.2 规范>>。

* YAML支持Unicode字符集的子集，即可打印字符。支持UTF-8,UTF-16编码，
  为了与JSON兼容支持UTF-32编码
* 空白字符缩进表示了文档结构。但是tab字符不能用于缩进。
* 注释以井号（#）开始，可以出现在文档任何位置，但是井号字符必须与其它标记
  必须使用空格分隔，否则特殊含义作为其它标记的一部分。
* 列表元素以横线（-）开始，每个元素占一行；或者像JSON一样，使用方括号（[]），
  元素间使用逗号加空格 `, ` 分隔
* 映射（map）的元素的键值对使用冒号加空格 `: ` 分隔（key: value）；元素使用逗号加空格分隔。 
  ** key前面可以加个问好（?），在key的值为多个字时可以取消歧义。
  
== 范例

[source, yaml]
----
  ---   # begin of document           <1> <5>
  firstName: John                     <2>
  lastName: Smith
  age: 25
  address:                            <3>
    streetAddress: 21 2nd Street
    city: New York
    state: NY
    postalCode: '10021'
  phoneNumber:                        <4>
  - type: home
    number: 212 555-1234
  - type: fax
    number: 646 555-4567
  gender:
    type: male
----
<1> 文档的开始
<2> map类型。key和value使用冒号和一个空格 `： ` 分隔
<3> map of map
<4> map of sequence
<5> 注释

== 参考文献
[[[YAML_ORG]]] http://yaml.org[yaml.org]

[[[YAML_REF]]] http://yaml.org/refcard.html[参考条例] YAML.org. Retrieved
               March 21, 2014

[[[WIKI_OFFSIDE]]] https://en.wikipedia.org/wiki/Off-side_rule[越位规则]
